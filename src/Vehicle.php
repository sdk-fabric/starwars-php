<?php
/**
 * Vehicle automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace SdkFabric\Starwars;

use PSX\Schema\Attribute\Description;
use PSX\Schema\Attribute\Key;

#[Description('A Vehicle is a single transport craft that does not have hyperdrive capability')]
class Vehicle implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    #[Description('')]
    protected ?string $name = null;
    #[Description('')]
    protected ?string $model = null;
    #[Key('vehicle_class')]
    #[Description('')]
    protected ?string $vehicleClass = null;
    #[Description('')]
    protected ?string $manufacturer = null;
    #[Description('')]
    protected ?string $length = null;
    #[Key('cost_in_credits')]
    #[Description('')]
    protected ?string $costInCredits = null;
    #[Description('')]
    protected ?string $crew = null;
    #[Description('')]
    protected ?string $passengers = null;
    #[Key('max_atmosphering_speed')]
    #[Description('')]
    protected ?string $maxAtmospheringSpeed = null;
    #[Key('cargo_capacity')]
    #[Description('')]
    protected ?string $cargoCapacity = null;
    #[Description('')]
    protected ?string $consumables = null;
    /**
     * @var array<string>|null
     */
    #[Description('')]
    protected ?array $films = null;
    /**
     * @var array<string>|null
     */
    #[Description('')]
    protected ?array $pilots = null;
    #[Description('')]
    protected ?string $url = null;
    #[Description('')]
    protected ?\PSX\DateTime\LocalDateTime $created = null;
    #[Description('')]
    protected ?\PSX\DateTime\LocalDateTime $edited = null;
    public function setName(?string $name): void
    {
        $this->name = $name;
    }
    public function getName(): ?string
    {
        return $this->name;
    }
    public function setModel(?string $model): void
    {
        $this->model = $model;
    }
    public function getModel(): ?string
    {
        return $this->model;
    }
    public function setVehicleClass(?string $vehicleClass): void
    {
        $this->vehicleClass = $vehicleClass;
    }
    public function getVehicleClass(): ?string
    {
        return $this->vehicleClass;
    }
    public function setManufacturer(?string $manufacturer): void
    {
        $this->manufacturer = $manufacturer;
    }
    public function getManufacturer(): ?string
    {
        return $this->manufacturer;
    }
    public function setLength(?string $length): void
    {
        $this->length = $length;
    }
    public function getLength(): ?string
    {
        return $this->length;
    }
    public function setCostInCredits(?string $costInCredits): void
    {
        $this->costInCredits = $costInCredits;
    }
    public function getCostInCredits(): ?string
    {
        return $this->costInCredits;
    }
    public function setCrew(?string $crew): void
    {
        $this->crew = $crew;
    }
    public function getCrew(): ?string
    {
        return $this->crew;
    }
    public function setPassengers(?string $passengers): void
    {
        $this->passengers = $passengers;
    }
    public function getPassengers(): ?string
    {
        return $this->passengers;
    }
    public function setMaxAtmospheringSpeed(?string $maxAtmospheringSpeed): void
    {
        $this->maxAtmospheringSpeed = $maxAtmospheringSpeed;
    }
    public function getMaxAtmospheringSpeed(): ?string
    {
        return $this->maxAtmospheringSpeed;
    }
    public function setCargoCapacity(?string $cargoCapacity): void
    {
        $this->cargoCapacity = $cargoCapacity;
    }
    public function getCargoCapacity(): ?string
    {
        return $this->cargoCapacity;
    }
    public function setConsumables(?string $consumables): void
    {
        $this->consumables = $consumables;
    }
    public function getConsumables(): ?string
    {
        return $this->consumables;
    }
    /**
     * @param array<string>|null $films
     */
    public function setFilms(?array $films): void
    {
        $this->films = $films;
    }
    /**
     * @return array<string>|null
     */
    public function getFilms(): ?array
    {
        return $this->films;
    }
    /**
     * @param array<string>|null $pilots
     */
    public function setPilots(?array $pilots): void
    {
        $this->pilots = $pilots;
    }
    /**
     * @return array<string>|null
     */
    public function getPilots(): ?array
    {
        return $this->pilots;
    }
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }
    public function getUrl(): ?string
    {
        return $this->url;
    }
    public function setCreated(?\PSX\DateTime\LocalDateTime $created): void
    {
        $this->created = $created;
    }
    public function getCreated(): ?\PSX\DateTime\LocalDateTime
    {
        return $this->created;
    }
    public function setEdited(?\PSX\DateTime\LocalDateTime $edited): void
    {
        $this->edited = $edited;
    }
    public function getEdited(): ?\PSX\DateTime\LocalDateTime
    {
        return $this->edited;
    }
    public function toRecord(): \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('name', $this->name);
        $record->put('model', $this->model);
        $record->put('vehicle_class', $this->vehicleClass);
        $record->put('manufacturer', $this->manufacturer);
        $record->put('length', $this->length);
        $record->put('cost_in_credits', $this->costInCredits);
        $record->put('crew', $this->crew);
        $record->put('passengers', $this->passengers);
        $record->put('max_atmosphering_speed', $this->maxAtmospheringSpeed);
        $record->put('cargo_capacity', $this->cargoCapacity);
        $record->put('consumables', $this->consumables);
        $record->put('films', $this->films);
        $record->put('pilots', $this->pilots);
        $record->put('url', $this->url);
        $record->put('created', $this->created);
        $record->put('edited', $this->edited);
        return $record;
    }
    public function jsonSerialize(): object
    {
        return (object) $this->toRecord()->getAll();
    }
}
